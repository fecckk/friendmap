// Generated by CoffeeScript 1.3.3
(function() {
  var initialize, markers, infos, plot;

  markers = {};
  infos = {};

  plot = function(location, user) {
    var latLng;
    latLng = new google.maps.LatLng(location.x, location.y);
    if (user.name in markers) {
      return markers[user.name].setPosition(latLng);
    } else {
      var info = new google.maps.InfoWindow({
	content: user.name + '<br/><img border="0" align="left" src="pics/' + user.name + '.png">'
      });
      infos[user.name] = info;

      markers[user.name] = new StyledMarker({
        styleIcon: new StyledIcon(StyledIconTypes.MARKER, {
          color: user.color
        }),
        position: latLng,
        map: map
      });

      // show info window when the marker is clicked
      google.maps.event.addListener(markers[user.name], 'click', function() {
        info.open(map, markers[user.name]);
      });
      return markers[user.name];
    }
  };

  initialize = function() {
    var host, options, port, socket;
    options = {
      center: new google.maps.LatLng(43.4879158266, -80.5462864345),
      mapTypeId: google.maps.MapTypeId.ROADMAP,
      zoom: 9
    };
    window.map = new google.maps.Map(document.getElementById("map_canvas"), options);
    host = "198.58.106.27";
    port = 8081;
    socket = new WebSocket("ws://" + host + ":" + port + "/");
    socket.onopen = function() {
      var i, _i, _results;
      _results = [];
      for (i = _i = 1; _i <= 20; i = ++_i) {
        _results.push(socket.sendJSON({
          "SUBSCRIBE": "testusr" + i
        }));
      }
      return _results;
    };
    return socket.onmessage = function(message) {
      var data;
      data = this.decodeJSON(message);
      if (data) {
        return plot(data.location, data.user);
      }
    };
  };

  window.map = void 0;

  google.maps.event.addDomListener(window, "load", initialize);

}).call(this);
