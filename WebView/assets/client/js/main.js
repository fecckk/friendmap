// Generated by CoffeeScript 1.4.0
  var markers, plot;

  markers = {};

  function plot(location, user) {
    var latLng;
    latLng = new google.maps.LatLng(location.x, location.y);
    if (user.name in markers) {
    	markers[user.name].setPosition(latLng);
    } else {
      /*markers[user.name] = new StyledMarker({
        styleIcon: new StyledIcon(StyledIconTypes.MARKER, {
          color: user.color
        }),
        position: latLng,
        map: googleMap
      });
      */
    	markers[user.name] = new google.maps.Marker({
    		map: googleMap,
    		position: latLng,
    		animation: google.maps.Animation.DROP
    		//title: "Hello, World!"
    	});
    }
  };
  
  decodeJSON = function(j) {
	    var coordinates, data, json;
	    json = JSON.parse(j.data)["SUBSCRIBE"];
	    if (!(json[0] === "message")) {
	      return false;
	    }
	    coordinates = json[2].split(',');
	    data = {
	      user: new User(json[1]),
	      location: {
	        x: parseFloat(coordinates[0]),
	        y: parseFloat(coordinates[1])
	      }
	    };
	    return data;
  };
  
  User = (function() {

    function User(name) {
      this.name = name;
      this.color = '#' + Math.floor(Math.random() * 16777215).toString(16);
    }

    return User;

  })();

  function initialize() {
    var host, options, port, socket;
    options = {
      center: new google.maps.LatLng(43.4879158266, -80.5462864345),
      mapTypeId: google.maps.MapTypeId.ROADMAP,
      zoom: 8
    };
    
    googleMap = new google.maps.Map(document.getElementById("map_canvas"), options);

    host = "198.58.106.27";
    port = 8081;

    socket = new WebSocket("ws://" + host + ":" + port + "/");

    socket.onopen = function() {
      var i, _i, _results;
      _results = [];
      for (i = _i = 1; _i <= 7; i = ++_i) {
        _results.push(socket.send(JSON.stringify({"SUBSCRIBE": "testusr" + i})));
      }
      return _results;
    };

    socket.onmessage = function(message) {
      var data;
      data = decodeJSON(message);
      if (data) {
    	  plot(data.location, data.user);
      }
    };
    
    socket.onclose = function() {
    	window.alert("closed");
    };
  };

  google.maps.event.addDomListener(window, "load", initialize);

  cascades = window.navigator.cascades;
